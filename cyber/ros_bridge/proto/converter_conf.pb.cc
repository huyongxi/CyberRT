// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: converter_conf.proto

#include "converter_conf.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace cyber {
PROTOBUF_CONSTEXPR ConverterConf::ConverterConf(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.apollo_channel_name_0_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.apollo_channel_name_1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.apollo_channel_name_2_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.apollo_channel_name_3_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ros_topic_name_0_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ros_topic_name_1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ros_topic_name_2_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ros_topic_name_3_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct ConverterConfDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConverterConfDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConverterConfDefaultTypeInternal() {}
  union {
    ConverterConf _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConverterConfDefaultTypeInternal _ConverterConf_default_instance_;
}  // namespace cyber
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_converter_5fconf_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_converter_5fconf_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_converter_5fconf_2eproto = nullptr;

const uint32_t TableStruct_converter_5fconf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::ConverterConf, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::ConverterConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::ConverterConf, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::ConverterConf, _impl_.apollo_channel_name_0_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::ConverterConf, _impl_.apollo_channel_name_1_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::ConverterConf, _impl_.apollo_channel_name_2_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::ConverterConf, _impl_.apollo_channel_name_3_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::ConverterConf, _impl_.ros_topic_name_0_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::ConverterConf, _impl_.ros_topic_name_1_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::ConverterConf, _impl_.ros_topic_name_2_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::ConverterConf, _impl_.ros_topic_name_3_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, -1, sizeof(::apollo::cyber::ConverterConf)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::cyber::_ConverterConf_default_instance_._instance,
};

const char descriptor_table_protodef_converter_5fconf_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024converter_conf.proto\022\014apollo.cyber\"\201\002\n"
  "\rConverterConf\022\014\n\004name\030\001 \001(\t\022\035\n\025apollo_c"
  "hannel_name_0\030\002 \001(\t\022\035\n\025apollo_channel_na"
  "me_1\030\003 \001(\t\022\035\n\025apollo_channel_name_2\030\004 \001("
  "\t\022\035\n\025apollo_channel_name_3\030\005 \001(\t\022\030\n\020ros_"
  "topic_name_0\030\006 \001(\t\022\030\n\020ros_topic_name_1\030\007"
  " \001(\t\022\030\n\020ros_topic_name_2\030\010 \001(\t\022\030\n\020ros_to"
  "pic_name_3\030\t \001(\t"
  ;
static ::_pbi::once_flag descriptor_table_converter_5fconf_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_converter_5fconf_2eproto = {
    false, false, 296, descriptor_table_protodef_converter_5fconf_2eproto,
    "converter_conf.proto",
    &descriptor_table_converter_5fconf_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_converter_5fconf_2eproto::offsets,
    file_level_metadata_converter_5fconf_2eproto, file_level_enum_descriptors_converter_5fconf_2eproto,
    file_level_service_descriptors_converter_5fconf_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_converter_5fconf_2eproto_getter() {
  return &descriptor_table_converter_5fconf_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_converter_5fconf_2eproto(&descriptor_table_converter_5fconf_2eproto);
namespace apollo {
namespace cyber {

// ===================================================================

class ConverterConf::_Internal {
 public:
  using HasBits = decltype(std::declval<ConverterConf>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_apollo_channel_name_0(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_apollo_channel_name_1(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_apollo_channel_name_2(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_apollo_channel_name_3(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ros_topic_name_0(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_ros_topic_name_1(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_ros_topic_name_2(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_ros_topic_name_3(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

ConverterConf::ConverterConf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.cyber.ConverterConf)
}
ConverterConf::ConverterConf(const ConverterConf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConverterConf* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.apollo_channel_name_0_){}
    , decltype(_impl_.apollo_channel_name_1_){}
    , decltype(_impl_.apollo_channel_name_2_){}
    , decltype(_impl_.apollo_channel_name_3_){}
    , decltype(_impl_.ros_topic_name_0_){}
    , decltype(_impl_.ros_topic_name_1_){}
    , decltype(_impl_.ros_topic_name_2_){}
    , decltype(_impl_.ros_topic_name_3_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.apollo_channel_name_0_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apollo_channel_name_0_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_apollo_channel_name_0()) {
    _this->_impl_.apollo_channel_name_0_.Set(from._internal_apollo_channel_name_0(), 
      _this->GetArenaForAllocation());
  }
  _impl_.apollo_channel_name_1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apollo_channel_name_1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_apollo_channel_name_1()) {
    _this->_impl_.apollo_channel_name_1_.Set(from._internal_apollo_channel_name_1(), 
      _this->GetArenaForAllocation());
  }
  _impl_.apollo_channel_name_2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apollo_channel_name_2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_apollo_channel_name_2()) {
    _this->_impl_.apollo_channel_name_2_.Set(from._internal_apollo_channel_name_2(), 
      _this->GetArenaForAllocation());
  }
  _impl_.apollo_channel_name_3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apollo_channel_name_3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_apollo_channel_name_3()) {
    _this->_impl_.apollo_channel_name_3_.Set(from._internal_apollo_channel_name_3(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ros_topic_name_0_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ros_topic_name_0_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_ros_topic_name_0()) {
    _this->_impl_.ros_topic_name_0_.Set(from._internal_ros_topic_name_0(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ros_topic_name_1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ros_topic_name_1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_ros_topic_name_1()) {
    _this->_impl_.ros_topic_name_1_.Set(from._internal_ros_topic_name_1(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ros_topic_name_2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ros_topic_name_2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_ros_topic_name_2()) {
    _this->_impl_.ros_topic_name_2_.Set(from._internal_ros_topic_name_2(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ros_topic_name_3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ros_topic_name_3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_ros_topic_name_3()) {
    _this->_impl_.ros_topic_name_3_.Set(from._internal_ros_topic_name_3(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.ConverterConf)
}

inline void ConverterConf::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.apollo_channel_name_0_){}
    , decltype(_impl_.apollo_channel_name_1_){}
    , decltype(_impl_.apollo_channel_name_2_){}
    , decltype(_impl_.apollo_channel_name_3_){}
    , decltype(_impl_.ros_topic_name_0_){}
    , decltype(_impl_.ros_topic_name_1_){}
    , decltype(_impl_.ros_topic_name_2_){}
    , decltype(_impl_.ros_topic_name_3_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.apollo_channel_name_0_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apollo_channel_name_0_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.apollo_channel_name_1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apollo_channel_name_1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.apollo_channel_name_2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apollo_channel_name_2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.apollo_channel_name_3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apollo_channel_name_3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ros_topic_name_0_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ros_topic_name_0_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ros_topic_name_1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ros_topic_name_1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ros_topic_name_2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ros_topic_name_2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ros_topic_name_3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ros_topic_name_3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConverterConf::~ConverterConf() {
  // @@protoc_insertion_point(destructor:apollo.cyber.ConverterConf)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConverterConf::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.apollo_channel_name_0_.Destroy();
  _impl_.apollo_channel_name_1_.Destroy();
  _impl_.apollo_channel_name_2_.Destroy();
  _impl_.apollo_channel_name_3_.Destroy();
  _impl_.ros_topic_name_0_.Destroy();
  _impl_.ros_topic_name_1_.Destroy();
  _impl_.ros_topic_name_2_.Destroy();
  _impl_.ros_topic_name_3_.Destroy();
}

void ConverterConf::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConverterConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.ConverterConf)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.apollo_channel_name_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.apollo_channel_name_1_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.apollo_channel_name_2_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.apollo_channel_name_3_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.ros_topic_name_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.ros_topic_name_1_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.ros_topic_name_2_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _impl_.ros_topic_name_3_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConverterConf::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.ConverterConf.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string apollo_channel_name_0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_apollo_channel_name_0();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.ConverterConf.apollo_channel_name_0");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string apollo_channel_name_1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_apollo_channel_name_1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.ConverterConf.apollo_channel_name_1");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string apollo_channel_name_2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_apollo_channel_name_2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.ConverterConf.apollo_channel_name_2");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string apollo_channel_name_3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_apollo_channel_name_3();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.ConverterConf.apollo_channel_name_3");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string ros_topic_name_0 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_ros_topic_name_0();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.ConverterConf.ros_topic_name_0");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string ros_topic_name_1 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_ros_topic_name_1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.ConverterConf.ros_topic_name_1");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string ros_topic_name_2 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_ros_topic_name_2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.ConverterConf.ros_topic_name_2");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string ros_topic_name_3 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_ros_topic_name_3();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.ConverterConf.ros_topic_name_3");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConverterConf::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.ConverterConf)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.ConverterConf.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional string apollo_channel_name_0 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_apollo_channel_name_0().data(), static_cast<int>(this->_internal_apollo_channel_name_0().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.ConverterConf.apollo_channel_name_0");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_apollo_channel_name_0(), target);
  }

  // optional string apollo_channel_name_1 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_apollo_channel_name_1().data(), static_cast<int>(this->_internal_apollo_channel_name_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.ConverterConf.apollo_channel_name_1");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_apollo_channel_name_1(), target);
  }

  // optional string apollo_channel_name_2 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_apollo_channel_name_2().data(), static_cast<int>(this->_internal_apollo_channel_name_2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.ConverterConf.apollo_channel_name_2");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_apollo_channel_name_2(), target);
  }

  // optional string apollo_channel_name_3 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_apollo_channel_name_3().data(), static_cast<int>(this->_internal_apollo_channel_name_3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.ConverterConf.apollo_channel_name_3");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_apollo_channel_name_3(), target);
  }

  // optional string ros_topic_name_0 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_ros_topic_name_0().data(), static_cast<int>(this->_internal_ros_topic_name_0().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.ConverterConf.ros_topic_name_0");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_ros_topic_name_0(), target);
  }

  // optional string ros_topic_name_1 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_ros_topic_name_1().data(), static_cast<int>(this->_internal_ros_topic_name_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.ConverterConf.ros_topic_name_1");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_ros_topic_name_1(), target);
  }

  // optional string ros_topic_name_2 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_ros_topic_name_2().data(), static_cast<int>(this->_internal_ros_topic_name_2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.ConverterConf.ros_topic_name_2");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_ros_topic_name_2(), target);
  }

  // optional string ros_topic_name_3 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_ros_topic_name_3().data(), static_cast<int>(this->_internal_ros_topic_name_3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.ConverterConf.ros_topic_name_3");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_ros_topic_name_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.ConverterConf)
  return target;
}

size_t ConverterConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.ConverterConf)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string apollo_channel_name_0 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_apollo_channel_name_0());
    }

    // optional string apollo_channel_name_1 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_apollo_channel_name_1());
    }

    // optional string apollo_channel_name_2 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_apollo_channel_name_2());
    }

    // optional string apollo_channel_name_3 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_apollo_channel_name_3());
    }

    // optional string ros_topic_name_0 = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_ros_topic_name_0());
    }

    // optional string ros_topic_name_1 = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_ros_topic_name_1());
    }

    // optional string ros_topic_name_2 = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_ros_topic_name_2());
    }

  }
  // optional string ros_topic_name_3 = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ros_topic_name_3());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConverterConf::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConverterConf::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConverterConf::GetClassData() const { return &_class_data_; }


void ConverterConf::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConverterConf*>(&to_msg);
  auto& from = static_cast<const ConverterConf&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.ConverterConf)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_apollo_channel_name_0(from._internal_apollo_channel_name_0());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_apollo_channel_name_1(from._internal_apollo_channel_name_1());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_apollo_channel_name_2(from._internal_apollo_channel_name_2());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_apollo_channel_name_3(from._internal_apollo_channel_name_3());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_ros_topic_name_0(from._internal_ros_topic_name_0());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_ros_topic_name_1(from._internal_ros_topic_name_1());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_ros_topic_name_2(from._internal_ros_topic_name_2());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_ros_topic_name_3(from._internal_ros_topic_name_3());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConverterConf::CopyFrom(const ConverterConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.ConverterConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConverterConf::IsInitialized() const {
  return true;
}

void ConverterConf::InternalSwap(ConverterConf* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apollo_channel_name_0_, lhs_arena,
      &other->_impl_.apollo_channel_name_0_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apollo_channel_name_1_, lhs_arena,
      &other->_impl_.apollo_channel_name_1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apollo_channel_name_2_, lhs_arena,
      &other->_impl_.apollo_channel_name_2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apollo_channel_name_3_, lhs_arena,
      &other->_impl_.apollo_channel_name_3_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ros_topic_name_0_, lhs_arena,
      &other->_impl_.ros_topic_name_0_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ros_topic_name_1_, lhs_arena,
      &other->_impl_.ros_topic_name_1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ros_topic_name_2_, lhs_arena,
      &other->_impl_.ros_topic_name_2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ros_topic_name_3_, lhs_arena,
      &other->_impl_.ros_topic_name_3_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ConverterConf::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_converter_5fconf_2eproto_getter, &descriptor_table_converter_5fconf_2eproto_once,
      file_level_metadata_converter_5fconf_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace cyber
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::cyber::ConverterConf*
Arena::CreateMaybeMessage< ::apollo::cyber::ConverterConf >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::cyber::ConverterConf >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
